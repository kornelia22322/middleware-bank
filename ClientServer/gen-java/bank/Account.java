/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package bank;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-07-01")
public class Account implements org.apache.thrift.TBase<Account, Account._Fields>, java.io.Serializable, Cloneable, Comparable<Account> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Account");

  private static final org.apache.thrift.protocol.TField PESEL_FIELD_DESC = new org.apache.thrift.protocol.TField("pesel", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField FIRSTNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("firstname", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LASTNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastname", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField INCOME_THRESHOLD_FIELD_DESC = new org.apache.thrift.protocol.TField("incomeThreshold", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField NATIVE_CURRENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("nativeCurrency", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new AccountStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new AccountTupleSchemeFactory();

  public java.lang.String pesel; // required
  public java.lang.String firstname; // required
  public java.lang.String lastname; // required
  public double incomeThreshold; // required
  public java.lang.String nativeCurrency; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PESEL((short)1, "pesel"),
    FIRSTNAME((short)2, "firstname"),
    LASTNAME((short)3, "lastname"),
    INCOME_THRESHOLD((short)4, "incomeThreshold"),
    NATIVE_CURRENCY((short)5, "nativeCurrency");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PESEL
          return PESEL;
        case 2: // FIRSTNAME
          return FIRSTNAME;
        case 3: // LASTNAME
          return LASTNAME;
        case 4: // INCOME_THRESHOLD
          return INCOME_THRESHOLD;
        case 5: // NATIVE_CURRENCY
          return NATIVE_CURRENCY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INCOMETHRESHOLD_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PESEL, new org.apache.thrift.meta_data.FieldMetaData("pesel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "PESEL")));
    tmpMap.put(_Fields.FIRSTNAME, new org.apache.thrift.meta_data.FieldMetaData("firstname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LASTNAME, new org.apache.thrift.meta_data.FieldMetaData("lastname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCOME_THRESHOLD, new org.apache.thrift.meta_data.FieldMetaData("incomeThreshold", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NATIVE_CURRENCY, new org.apache.thrift.meta_data.FieldMetaData("nativeCurrency", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Account.class, metaDataMap);
  }

  public Account() {
  }

  public Account(
    java.lang.String pesel,
    java.lang.String firstname,
    java.lang.String lastname,
    double incomeThreshold,
    java.lang.String nativeCurrency)
  {
    this();
    this.pesel = pesel;
    this.firstname = firstname;
    this.lastname = lastname;
    this.incomeThreshold = incomeThreshold;
    setIncomeThresholdIsSet(true);
    this.nativeCurrency = nativeCurrency;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Account(Account other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetPesel()) {
      this.pesel = other.pesel;
    }
    if (other.isSetFirstname()) {
      this.firstname = other.firstname;
    }
    if (other.isSetLastname()) {
      this.lastname = other.lastname;
    }
    this.incomeThreshold = other.incomeThreshold;
    if (other.isSetNativeCurrency()) {
      this.nativeCurrency = other.nativeCurrency;
    }
  }

  public Account deepCopy() {
    return new Account(this);
  }

  @Override
  public void clear() {
    this.pesel = null;
    this.firstname = null;
    this.lastname = null;
    setIncomeThresholdIsSet(false);
    this.incomeThreshold = 0.0;
    this.nativeCurrency = null;
  }

  public java.lang.String getPesel() {
    return this.pesel;
  }

  public Account setPesel(java.lang.String pesel) {
    this.pesel = pesel;
    return this;
  }

  public void unsetPesel() {
    this.pesel = null;
  }

  /** Returns true if field pesel is set (has been assigned a value) and false otherwise */
  public boolean isSetPesel() {
    return this.pesel != null;
  }

  public void setPeselIsSet(boolean value) {
    if (!value) {
      this.pesel = null;
    }
  }

  public java.lang.String getFirstname() {
    return this.firstname;
  }

  public Account setFirstname(java.lang.String firstname) {
    this.firstname = firstname;
    return this;
  }

  public void unsetFirstname() {
    this.firstname = null;
  }

  /** Returns true if field firstname is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstname() {
    return this.firstname != null;
  }

  public void setFirstnameIsSet(boolean value) {
    if (!value) {
      this.firstname = null;
    }
  }

  public java.lang.String getLastname() {
    return this.lastname;
  }

  public Account setLastname(java.lang.String lastname) {
    this.lastname = lastname;
    return this;
  }

  public void unsetLastname() {
    this.lastname = null;
  }

  /** Returns true if field lastname is set (has been assigned a value) and false otherwise */
  public boolean isSetLastname() {
    return this.lastname != null;
  }

  public void setLastnameIsSet(boolean value) {
    if (!value) {
      this.lastname = null;
    }
  }

  public double getIncomeThreshold() {
    return this.incomeThreshold;
  }

  public Account setIncomeThreshold(double incomeThreshold) {
    this.incomeThreshold = incomeThreshold;
    setIncomeThresholdIsSet(true);
    return this;
  }

  public void unsetIncomeThreshold() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INCOMETHRESHOLD_ISSET_ID);
  }

  /** Returns true if field incomeThreshold is set (has been assigned a value) and false otherwise */
  public boolean isSetIncomeThreshold() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INCOMETHRESHOLD_ISSET_ID);
  }

  public void setIncomeThresholdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INCOMETHRESHOLD_ISSET_ID, value);
  }

  public java.lang.String getNativeCurrency() {
    return this.nativeCurrency;
  }

  public Account setNativeCurrency(java.lang.String nativeCurrency) {
    this.nativeCurrency = nativeCurrency;
    return this;
  }

  public void unsetNativeCurrency() {
    this.nativeCurrency = null;
  }

  /** Returns true if field nativeCurrency is set (has been assigned a value) and false otherwise */
  public boolean isSetNativeCurrency() {
    return this.nativeCurrency != null;
  }

  public void setNativeCurrencyIsSet(boolean value) {
    if (!value) {
      this.nativeCurrency = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case PESEL:
      if (value == null) {
        unsetPesel();
      } else {
        setPesel((java.lang.String)value);
      }
      break;

    case FIRSTNAME:
      if (value == null) {
        unsetFirstname();
      } else {
        setFirstname((java.lang.String)value);
      }
      break;

    case LASTNAME:
      if (value == null) {
        unsetLastname();
      } else {
        setLastname((java.lang.String)value);
      }
      break;

    case INCOME_THRESHOLD:
      if (value == null) {
        unsetIncomeThreshold();
      } else {
        setIncomeThreshold((java.lang.Double)value);
      }
      break;

    case NATIVE_CURRENCY:
      if (value == null) {
        unsetNativeCurrency();
      } else {
        setNativeCurrency((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PESEL:
      return getPesel();

    case FIRSTNAME:
      return getFirstname();

    case LASTNAME:
      return getLastname();

    case INCOME_THRESHOLD:
      return getIncomeThreshold();

    case NATIVE_CURRENCY:
      return getNativeCurrency();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PESEL:
      return isSetPesel();
    case FIRSTNAME:
      return isSetFirstname();
    case LASTNAME:
      return isSetLastname();
    case INCOME_THRESHOLD:
      return isSetIncomeThreshold();
    case NATIVE_CURRENCY:
      return isSetNativeCurrency();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Account)
      return this.equals((Account)that);
    return false;
  }

  public boolean equals(Account that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_pesel = true && this.isSetPesel();
    boolean that_present_pesel = true && that.isSetPesel();
    if (this_present_pesel || that_present_pesel) {
      if (!(this_present_pesel && that_present_pesel))
        return false;
      if (!this.pesel.equals(that.pesel))
        return false;
    }

    boolean this_present_firstname = true && this.isSetFirstname();
    boolean that_present_firstname = true && that.isSetFirstname();
    if (this_present_firstname || that_present_firstname) {
      if (!(this_present_firstname && that_present_firstname))
        return false;
      if (!this.firstname.equals(that.firstname))
        return false;
    }

    boolean this_present_lastname = true && this.isSetLastname();
    boolean that_present_lastname = true && that.isSetLastname();
    if (this_present_lastname || that_present_lastname) {
      if (!(this_present_lastname && that_present_lastname))
        return false;
      if (!this.lastname.equals(that.lastname))
        return false;
    }

    boolean this_present_incomeThreshold = true;
    boolean that_present_incomeThreshold = true;
    if (this_present_incomeThreshold || that_present_incomeThreshold) {
      if (!(this_present_incomeThreshold && that_present_incomeThreshold))
        return false;
      if (this.incomeThreshold != that.incomeThreshold)
        return false;
    }

    boolean this_present_nativeCurrency = true && this.isSetNativeCurrency();
    boolean that_present_nativeCurrency = true && that.isSetNativeCurrency();
    if (this_present_nativeCurrency || that_present_nativeCurrency) {
      if (!(this_present_nativeCurrency && that_present_nativeCurrency))
        return false;
      if (!this.nativeCurrency.equals(that.nativeCurrency))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetPesel()) ? 131071 : 524287);
    if (isSetPesel())
      hashCode = hashCode * 8191 + pesel.hashCode();

    hashCode = hashCode * 8191 + ((isSetFirstname()) ? 131071 : 524287);
    if (isSetFirstname())
      hashCode = hashCode * 8191 + firstname.hashCode();

    hashCode = hashCode * 8191 + ((isSetLastname()) ? 131071 : 524287);
    if (isSetLastname())
      hashCode = hashCode * 8191 + lastname.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(incomeThreshold);

    hashCode = hashCode * 8191 + ((isSetNativeCurrency()) ? 131071 : 524287);
    if (isSetNativeCurrency())
      hashCode = hashCode * 8191 + nativeCurrency.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Account other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetPesel()).compareTo(other.isSetPesel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPesel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pesel, other.pesel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFirstname()).compareTo(other.isSetFirstname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstname, other.firstname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLastname()).compareTo(other.isSetLastname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastname, other.lastname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIncomeThreshold()).compareTo(other.isSetIncomeThreshold());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncomeThreshold()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.incomeThreshold, other.incomeThreshold);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNativeCurrency()).compareTo(other.isSetNativeCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNativeCurrency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nativeCurrency, other.nativeCurrency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Account(");
    boolean first = true;

    sb.append("pesel:");
    if (this.pesel == null) {
      sb.append("null");
    } else {
      sb.append(this.pesel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("firstname:");
    if (this.firstname == null) {
      sb.append("null");
    } else {
      sb.append(this.firstname);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastname:");
    if (this.lastname == null) {
      sb.append("null");
    } else {
      sb.append(this.lastname);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("incomeThreshold:");
    sb.append(this.incomeThreshold);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nativeCurrency:");
    if (this.nativeCurrency == null) {
      sb.append("null");
    } else {
      sb.append(this.nativeCurrency);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AccountStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AccountStandardScheme getScheme() {
      return new AccountStandardScheme();
    }
  }

  private static class AccountStandardScheme extends org.apache.thrift.scheme.StandardScheme<Account> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Account struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PESEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.pesel = iprot.readString();
              struct.setPeselIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FIRSTNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.firstname = iprot.readString();
              struct.setFirstnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LASTNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastname = iprot.readString();
              struct.setLastnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INCOME_THRESHOLD
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.incomeThreshold = iprot.readDouble();
              struct.setIncomeThresholdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NATIVE_CURRENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nativeCurrency = iprot.readString();
              struct.setNativeCurrencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Account struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.pesel != null) {
        oprot.writeFieldBegin(PESEL_FIELD_DESC);
        oprot.writeString(struct.pesel);
        oprot.writeFieldEnd();
      }
      if (struct.firstname != null) {
        oprot.writeFieldBegin(FIRSTNAME_FIELD_DESC);
        oprot.writeString(struct.firstname);
        oprot.writeFieldEnd();
      }
      if (struct.lastname != null) {
        oprot.writeFieldBegin(LASTNAME_FIELD_DESC);
        oprot.writeString(struct.lastname);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INCOME_THRESHOLD_FIELD_DESC);
      oprot.writeDouble(struct.incomeThreshold);
      oprot.writeFieldEnd();
      if (struct.nativeCurrency != null) {
        oprot.writeFieldBegin(NATIVE_CURRENCY_FIELD_DESC);
        oprot.writeString(struct.nativeCurrency);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AccountTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public AccountTupleScheme getScheme() {
      return new AccountTupleScheme();
    }
  }

  private static class AccountTupleScheme extends org.apache.thrift.scheme.TupleScheme<Account> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Account struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPesel()) {
        optionals.set(0);
      }
      if (struct.isSetFirstname()) {
        optionals.set(1);
      }
      if (struct.isSetLastname()) {
        optionals.set(2);
      }
      if (struct.isSetIncomeThreshold()) {
        optionals.set(3);
      }
      if (struct.isSetNativeCurrency()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetPesel()) {
        oprot.writeString(struct.pesel);
      }
      if (struct.isSetFirstname()) {
        oprot.writeString(struct.firstname);
      }
      if (struct.isSetLastname()) {
        oprot.writeString(struct.lastname);
      }
      if (struct.isSetIncomeThreshold()) {
        oprot.writeDouble(struct.incomeThreshold);
      }
      if (struct.isSetNativeCurrency()) {
        oprot.writeString(struct.nativeCurrency);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Account struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.pesel = iprot.readString();
        struct.setPeselIsSet(true);
      }
      if (incoming.get(1)) {
        struct.firstname = iprot.readString();
        struct.setFirstnameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.lastname = iprot.readString();
        struct.setLastnameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.incomeThreshold = iprot.readDouble();
        struct.setIncomeThresholdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.nativeCurrency = iprot.readString();
        struct.setNativeCurrencyIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

